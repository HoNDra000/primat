import humanize
import random
import sqlite3
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

token = "vk1.a.zOkbeKjvIF4sOUBpjRGpxzVxls54g0JprB41XvKBgcU0OotuiW33hnLVUs8NEF7Mzdxx1oecpf3gnwE0No0tG7YJXgNxoRHfJo5elf9kQ00RagEa8kZ2Ck7RkjhbhlU0Oxe3GVSeVlSOPi_JlvqQV4C-IFQfEBP-rWJ8Lscq4a8I5RE8i3ckDoJbf7zlZ-Ky"
bh = vk_api.VkApi(token = token)
longpoll = VkBotLongPoll(bh, 210219643)
give = bh.get_api()

def msg(id, text):
	bh.method('messages.send', {'chat_id' : id, 'message' : text, 'random_id': 0})
def is_num(string):
    if string.isdigit():
       return True
    else:
        try:
            float(string)
            return True
        except ValueError:
            return False

class Roulete:
	def Check(id, value, stavka, user_id):
		if str(value) == '–∫—Ä–∞—Å–Ω–æ–µ' or str(value) == 'red' or str(value) == 'black' or str(value) == '—á–µ—Ä–Ω–æ–µ' or str(value) == '—á—ë—Ä–Ω–æ–µ' or str(value) == 'zero' or str(value) == 'green' or str(value) == '–∑–µ—Ä–æ' or str(value) == '–∑–µ–ª—ë–Ω–æ–µ':
			Roulete.Method_Color(id, value, stavka, user_id)
		elif int(value) == 1 or int(value) == 2 or int(value) == 3 or int(value) == 4 or int(value) == 5 or int(value) == 6 or int(value) == 7 or int(value) == 8 or int(value) == 9 or int(value) == 10:
			Roulete.Method_Num(id, value, stavka, user_id)
		elif int(value) == 11 or int(value) == 12 or int(value) == 13 or int(value) == 14 or int(value) == 15 or int(value) == 16 or int(value) == 17 or int(value) == 18 or int(value) == 19 or int(value) == 20:
			Roulete.Method_Num(id, value, stavka, user_id)
		elif int(value) == 21 or int(value) == 22 or int(value) == 23 or int(value) == 24 or int(value) == 25 or int(value) == 26 or int(value) == 27 or int(value) == 28 or int(value) == 29 or int(value) == 30:
			Roulete.Method_Num(id, value, stavka, user_id)
		elif int(value) == 31 or int(value) == 32 or int(value) == 33 or int(value) == 34 or int(value) == 35 or int(value) == 36 or int(value) == 0:
			Roulete.Method_Num(id, value, stavka, user_id)
		else:
			msg(id, '–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, –ö—Ä–∞—Å–Ω–æ–µ, –ó–µ—Ä–æ, –ß—ë—Ä–Ω–æ–µ.')
	def Method_Num(id, value, stavka, user_id):
		num = random.randint(0, 36)
		from helpmethod.readdb import get_balance
		balance = get_balance(user_id)
		from helpmethod.readdb import get_nick
		nick = get_nick(user_id)
		if int(value) == int(num):
			if id == 16:
				win = int(stavka) * 72
				from helpmethod.readdb import get_koef
				koef = int(get_koef(user_id))

				win *= koef

				result = int(win) + int(balance)

				sqlite_connection = sqlite3.connect('databases\MDB.db')
				cur = sqlite_connection.cursor()

				cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (result, user_id))
				sqlite_connection.commit()
				cur.close()

				msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x72!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))

			else:
				win = int(stavka) * 36
				from helpmethod.readdb import get_koef
				koef = int(get_koef(user_id))

				win *= koef

				result = int(win) + int(balance)

				sqlite_connection = sqlite3.connect('databases\MDB.db')
				cur = sqlite_connection.cursor()

				cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (result, user_id))
				sqlite_connection.commit()
				cur.close()

				msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x36!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
		else:
			result = int(balance) - int(stavka)

			sqlite_connection = sqlite3.connect('databases\MDB.db')
			cur = sqlite_connection.cursor()

			cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (result, user_id))
			sqlite_connection.commit()
			cur.close()

			msg(id, '‚ùå[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª:(\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' +  humanize.intcomma(str(result)))
	def Method_Color(id, value, stavka, user_id):
		num = random.randint(0, 36)
		from helpmethod.readdb import get_balance
		balance = get_balance(user_id)
		from helpmethod.readdb import get_nick
		nick = get_nick(user_id)
		if value == '–∫—Ä–∞—Å–Ω–æ–µ' or value == 'red':
			if int(num) == 1 or int(num) == 3 or int(num) == 5 or int(num) == 7 or int(num) == 9 or int(num) == 12 or int(num) == 14 or int(num) == 16 or int(num) == 18 or int(num) == 19 or int(num) == 21 or int(num) == 23 or int(num) == 25 or int(num) == 27 or int(num) == 30 or int(num) == 32 or int(num) == 34 or int(num) == 36:
				if id == 16:
					win = int(stavka) * 4
					from helpmethod.readdb import get_koef
					koef = int(get_koef(user_id))

					win *= koef

					result = int(balance) + int(win)

					sqlite_connection = sqlite3.connect('databases\MDB.db')
					cur = sqlite_connection.cursor()

					cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
					sqlite_connection.commit()
					cur.close()

					msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x4!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
					print('roulete.WIN: ' + str(user_id) + ', ' + str(result) + ', ' + str(num))
				else:
					win = int(stavka) * 2
					from helpmethod.readdb import get_koef
					koef = int(get_koef(user_id))

					win *= koef

					result = int(balance) + int(win)

					sqlite_connection = sqlite3.connect('databases\MDB.db')
					cur = sqlite_connection.cursor()

					cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
					sqlite_connection.commit()
					cur.close()

					msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x2!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
					print('roulete.WIN: ' + str(user_id) + ', ' + str(result) + ', ' + str(num))
			else:
				result = int(balance) - int(stavka)
				
				sqlite_connection = sqlite3.connect('databases\MDB.db')
				cur = sqlite_connection.cursor()

				cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
				sqlite_connection.commit()
				cur.close()
				
				msg(id, '‚ùå[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª:(\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' +  humanize.intcomma(str(result)))
		elif value == 'black' or value == '—á–µ—Ä–Ω–æ–µ' or value == '—á—ë—Ä–Ω–æ–µ':
			if int(num) == 2 or int(num) == 4 or int(num) == 6 or int(num) == 8 or int(num) == 10 or int(num) == 11 or int(num) == 13 or int(num) == 15 or int(num) == 17 or int(num) == 20 or int(num) == 22 or int(num) == 24 or int(num) == 26 or int(num) == 28 or int(num) == 29 or int(num) == 31 or int(num) == 33 or int(num) == 35:
				if id == 16:
					win = int(stavka) * 4
					from helpmethod.readdb import get_koef
					koef = int(get_koef(user_id))

					win *= koef

					result = int(balance) + int(win)
					
					sqlite_connection = sqlite3.connect('databases\MDB.db')
					cur = sqlite_connection.cursor()

					cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
					sqlite_connection.commit()
					cur.close()
					
					msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x4!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
				else:
					win = int(stavka) * 2
					from helpmethod.readdb import get_koef
					koef = int(get_koef(user_id))

					win *= koef

					result = int(balance) + int(win)
					
					sqlite_connection = sqlite3.connect('databases\MDB.db')
					cur = sqlite_connection.cursor()

					cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
					sqlite_connection.commit()
					cur.close()
					
					msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x2!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
			else:
				result = int(balance) - int(stavka)
				
				sqlite_connection = sqlite3.connect('databases\MDB.db')
				cur = sqlite_connection.cursor()

				cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
				sqlite_connection.commit()
				cur.close()
				
				msg(id, '‚ùå[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª:(\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' +  humanize.intcomma(str(result)))
		elif value == 'zero' or value == 'green' or value == '–∑–µ—Ä–æ' or value == '–∑–µ–ª—ë–Ω–æ–µ':
			if int(num) == 0:
				if id == 16:
					win = int(stavka) * 72
					from helpmethod.readdb import get_koef
					koef = int(get_koef(user_id))

					win *= koef

					result = int(balance) + int(win)
					
					sqlite_connection = sqlite3.connect('databases\MDB.db')
					cur = sqlite_connection.cursor()

					cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
					sqlite_connection.commit()
					cur.close()
					
					msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x72!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
				else:
					win = int(stavka) * 36
					from helpmethod.readdb import get_koef
					koef = int(get_koef(user_id))

					win *= koef

					result = int(balance) + int(win)
					
					sqlite_connection = sqlite3.connect('databases\MDB.db')
					cur = sqlite_connection.cursor()

					cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
					sqlite_connection.commit()
					cur.close()
					
					msg(id, 'üí∞[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –≤—ã–∏–≥—Ä–∞–ª x36!\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + humanize.intcomma(str(result)))
			else:
				result = int(balance) - int(stavka)
				
				sqlite_connection = sqlite3.connect('databases\MDB.db')
				cur = sqlite_connection.cursor()

				cur.execute(f"""UPDATE users SET balance = ? WHERE id = ?""", (str(result), user_id))
				sqlite_connection.commit()
				cur.close()
				
				msg(id, '‚ùå[id' + str(user_id) + "|" + str(nick) + '] —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª:(\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' +  humanize.intcomma(str(result)))

def rouleteStart(id, user_id, message):
	stavk = message.replace('—Ä—É–ª–µ—Ç–∫–∞ ', '')
	stavk_count = len(str(stavk))
	if stavk_count < 0:
		msg(id, '—Å—Ç–∞–≤–∫–∞ —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∞—è.')
	else:
		stavka = stavk.split(' ')[0]
		val = stavk.split(' ')[1]
		valu = str(val)
		a = is_num(val)
		if a == False:
			from helpmethod.readdb import get_balance
			balance = get_balance(user_id)
			valu = str(val)
			num_ = is_num(stavka)
			if valu == 'red' or valu == 'black' or valu == 'zero' or valu == '–∫—Ä–∞—Å–Ω–æ–µ' or valu == '—á–µ—Ä–Ω–æ–µ' or valu == '—á—ë—Ä–Ω–æ–µ' or valu == '–∑–µ—Ä–æ' or valu == '–∑–µ–ª—ë–Ω–æ–µ':
				if num_ == False:
					msg(id, '—Ç–æ, –Ω–∞ —á—Ç–æ —Ç—ã —Å—Ç–∞–≤–∏—à—å –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã "—Ä—É–ª–µ—Ç–∫–∞ —Ö–µ–ª–ø"')
				elif num_ == True:
					if int(balance) > int(stavka) or int(balance) == int(stavka):
						Roulete.Check(id, val, stavka, user_id)
					elif stavka == '–≤—Å–µ' or stavka == '–≤—Å—ë':
						stavk = int(balance)
						Roulete.Check(id, val, stavk, user_id)
					elif int(stavka) > int(balance):
						msg(id, '—É —Ç—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω—è–∫, –µ–±–ª–∞–Ω')
					else:
						msg(id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É.\nROLL_ERR')
				else:
					msg(id, 'ERROR: Critical error rul_a01')
			else:
				msg(id, '—Ç–æ, –Ω–∞ —á—Ç–æ —Ç—ã —Å—Ç–∞–≤–∏—à—å –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã "—Ä—É–ª–µ—Ç–∫–∞ —Ö–µ–ª–ø"')
		elif a == True:
			from helpmethod.readdb import get_balance
			balance = get_balance(user_id)
			value = int(val)
			num_ = is_num(stavka)
			if value == 1 or value == 2 or value == 3 or value == 4 or value == 5 or value == 6 or value == 7 or value == 8 or value == 9 or value == 10 or value == 11 or value == 12 or value == 13 or value == 14 or value == 15 or value == 16 or value == 17 or value == 18 or value == 19 or value == 20 or value == 21 or value == 22 or value == 23 or value == 24 or value == 25 or value == 26 or value == 27 or value == 28 or value == 29 or value == 30 or value == 31 or value == 32 or value == 33 or value == 34 or value == 35 or value == 36 or value == 0:
				if num_ == False:
					if stavka == '–≤—Å–µ' or stavka == '–≤—Å—ë':
						stavk == int(balance)
						Roulete.Check(id, val, stavk, user_id)
					else:
						msg(id, '—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º —Å—É–∫–∞')
				elif num_ == True:
					if int(balance) > int(stavka) or int(balance) == int(stavka):
						Roulete.Check(id, val, stavka, user_id)
					elif int(stavka) > int(balance):
						msg(id, '—É —Ç—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω—è–∫, –µ–±–ª–∞–Ω')
					else:
						msg(id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É.\nROLL_ERR')
				else:
					msg(id, 'ERROR: Critical error rul_a01')
			else:
				msg(id, '—Ç–æ, –Ω–∞ —á—Ç–æ —Ç—ã —Å—Ç–∞–≤–∏—à—å –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã "—Ä—É–ª–µ—Ç–∫–∞ —Ö–µ–ª–ø"')
		else:
			msg(id, 'not fixed error')